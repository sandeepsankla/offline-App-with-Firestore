// Generated by Dagger (https://dagger.dev).
package com.example.core.di;

import com.example.core.util.AppLog;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FormattedResponse_Factory implements Factory<FormattedResponse> {
  private final Provider<ApiInterface> apiInterfaceProvider;

  private final Provider<AppLog> appLogProvider;

  public FormattedResponse_Factory(Provider<ApiInterface> apiInterfaceProvider,
      Provider<AppLog> appLogProvider) {
    this.apiInterfaceProvider = apiInterfaceProvider;
    this.appLogProvider = appLogProvider;
  }

  @Override
  public FormattedResponse get() {
    FormattedResponse instance = newInstance(apiInterfaceProvider.get());
    FormattedResponse_MembersInjector.injectAppLog(instance, appLogProvider.get());
    return instance;
  }

  public static FormattedResponse_Factory create(Provider<ApiInterface> apiInterfaceProvider,
      Provider<AppLog> appLogProvider) {
    return new FormattedResponse_Factory(apiInterfaceProvider, appLogProvider);
  }

  public static FormattedResponse newInstance(ApiInterface apiInterface) {
    return new FormattedResponse(apiInterface);
  }
}
