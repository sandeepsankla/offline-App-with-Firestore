// Generated by Dagger (https://dagger.dev).
package com.example.core.util;

import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ErrorMessages_Factory implements Factory<ErrorMessages> {
  private final Provider<Integer> codeProvider;

  private final Provider<AppLog> appLogProvider;

  public ErrorMessages_Factory(Provider<Integer> codeProvider, Provider<AppLog> appLogProvider) {
    this.codeProvider = codeProvider;
    this.appLogProvider = appLogProvider;
  }

  @Override
  public ErrorMessages get() {
    ErrorMessages instance = newInstance(codeProvider.get());
    ErrorMessages_MembersInjector.injectAppLog(instance, appLogProvider.get());
    return instance;
  }

  public static ErrorMessages_Factory create(Provider<Integer> codeProvider,
      Provider<AppLog> appLogProvider) {
    return new ErrorMessages_Factory(codeProvider, appLogProvider);
  }

  public static ErrorMessages newInstance(Integer code) {
    return new ErrorMessages(code);
  }
}
