// Generated by Dagger (https://dagger.dev).
package com.example.core.di;

import com.github.leonardoxh.livedatacalladapter.LiveDataResponseBodyConverterFactory;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RemoteApiModule_ProvideLiveDataResponseBodyConverterFactoryFactory implements Factory<LiveDataResponseBodyConverterFactory> {
  private final RemoteApiModule module;

  public RemoteApiModule_ProvideLiveDataResponseBodyConverterFactoryFactory(
      RemoteApiModule module) {
    this.module = module;
  }

  @Override
  public LiveDataResponseBodyConverterFactory get() {
    return provideLiveDataResponseBodyConverterFactory(module);
  }

  public static RemoteApiModule_ProvideLiveDataResponseBodyConverterFactoryFactory create(
      RemoteApiModule module) {
    return new RemoteApiModule_ProvideLiveDataResponseBodyConverterFactoryFactory(module);
  }

  public static LiveDataResponseBodyConverterFactory provideLiveDataResponseBodyConverterFactory(
      RemoteApiModule instance) {
    return Preconditions.checkNotNull(instance.provideLiveDataResponseBodyConverterFactory(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
