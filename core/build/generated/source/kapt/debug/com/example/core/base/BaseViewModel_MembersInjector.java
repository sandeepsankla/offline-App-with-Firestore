// Generated by Dagger (https://dagger.dev).
package com.example.core.base;

import com.example.core.util.AppLog;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseViewModel_MembersInjector implements MembersInjector<BaseViewModel> {
  private final Provider<AppLog> applogProvider;

  public BaseViewModel_MembersInjector(Provider<AppLog> applogProvider) {
    this.applogProvider = applogProvider;
  }

  public static MembersInjector<BaseViewModel> create(Provider<AppLog> applogProvider) {
    return new BaseViewModel_MembersInjector(applogProvider);
  }

  @Override
  public void injectMembers(BaseViewModel instance) {
    injectApplog(instance, applogProvider.get());
  }

  @InjectedFieldSignature("com.example.core.base.BaseViewModel.applog")
  public static void injectApplog(BaseViewModel instance, AppLog applog) {
    instance.applog = applog;
  }
}
