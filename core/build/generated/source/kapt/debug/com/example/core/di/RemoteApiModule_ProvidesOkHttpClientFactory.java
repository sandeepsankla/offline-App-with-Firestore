// Generated by Dagger (https://dagger.dev).
package com.example.core.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.OkHttpClient;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RemoteApiModule_ProvidesOkHttpClientFactory implements Factory<OkHttpClient> {
  private final RemoteApiModule module;

  public RemoteApiModule_ProvidesOkHttpClientFactory(RemoteApiModule module) {
    this.module = module;
  }

  @Override
  public OkHttpClient get() {
    return providesOkHttpClient(module);
  }

  public static RemoteApiModule_ProvidesOkHttpClientFactory create(RemoteApiModule module) {
    return new RemoteApiModule_ProvidesOkHttpClientFactory(module);
  }

  public static OkHttpClient providesOkHttpClient(RemoteApiModule instance) {
    return Preconditions.checkNotNull(instance.providesOkHttpClient(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
