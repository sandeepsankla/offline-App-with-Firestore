// Generated by Dagger (https://dagger.dev).
package com.example.core.di;

import com.github.leonardoxh.livedatacalladapter.LiveDataCallAdapterFactory;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RemoteApiModule_ProvideLiveDataCallAdapterFactoryFactory implements Factory<LiveDataCallAdapterFactory> {
  private final RemoteApiModule module;

  public RemoteApiModule_ProvideLiveDataCallAdapterFactoryFactory(RemoteApiModule module) {
    this.module = module;
  }

  @Override
  public LiveDataCallAdapterFactory get() {
    return provideLiveDataCallAdapterFactory(module);
  }

  public static RemoteApiModule_ProvideLiveDataCallAdapterFactoryFactory create(
      RemoteApiModule module) {
    return new RemoteApiModule_ProvideLiveDataCallAdapterFactoryFactory(module);
  }

  public static LiveDataCallAdapterFactory provideLiveDataCallAdapterFactory(
      RemoteApiModule instance) {
    return Preconditions.checkNotNull(instance.provideLiveDataCallAdapterFactory(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
